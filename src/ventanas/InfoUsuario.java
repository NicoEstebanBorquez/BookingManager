package ventanas;

import clases.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;
import java.sql.*;
import javax.swing.JOptionPane;

public class InfoUsuario extends javax.swing.JFrame {

    String usuario = Login.usuario;
    //Esta variable contiene el nº ID que se coge al pinchar en el usuario en la tabla GestionarUsuarios
    public static String ID_usuario_seleccionado = String.valueOf(GestionarUsuarios.user_update);
    int ID = 0;

    String var_id = "", var_username = "", var_nombre = "", var_apellidos = "", var_email = "", var_telefono = "";
    int var_puesto = 0, var_estatus = 0;

    public InfoUsuario() {
        initComponents();

        setSize(700, 400);
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Información del usuario - Sesión de " + usuario);
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        this.jLabel_titulo.setText("Información del usuario: " + String.valueOf(ID_usuario_seleccionado));

        //Imagen de fondo
        ImageIcon wallpaper = new ImageIcon("src/images/Wallpaper.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(), jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_Wallpaper.setIcon(icono);
        this.repaint();

        //Rellena los campos de InfoUsuario con los datos del usuario seleccionado en GestionarUsuarios ---------------------------------------------------------------
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select * from usuarios where id_usuario = '" + ID_usuario_seleccionado + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txt_id.setText(String.valueOf(rs.getInt("id_usuario")));
                txt_username.setText(rs.getString("username"));
                txt_nombre.setText(rs.getString("nombre"));
                txt_apellidos.setText(rs.getString("apellidos"));
                txt_telefono.setText(rs.getString("telefono"));
                txt_email.setText(rs.getString("email"));

                if (rs.getString("puesto").equals("Administrador")) {
                    this.combo_puesto.setSelectedIndex(0);
                } else if (rs.getString("puesto").equals("Recepcion")) {
                    this.combo_puesto.setSelectedIndex(1);
                } else if (rs.getString("puesto").equals("Reservas")) {
                    this.combo_puesto.setSelectedIndex(2);
                }

                if (rs.getString("estatus").equals("Activo")) {
                    this.combo_estatus.setSelectedIndex(0);
                } else if (rs.getString("estatus").equals("Inactivo")) {
                    this.combo_estatus.setSelectedIndex(1);
                }
            }

        } catch (SQLException e) {
            System.err.println("Error al cargar los datos del usuario. " + e);
            JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos. Contacte con el Administrador del sistema.");
        }
        //----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/logo/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_titulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_apellidos = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        combo_estatus = new javax.swing.JComboBox<>();
        combo_puesto = new javax.swing.JComboBox<>();
        btn_modificarContraseña = new javax.swing.JButton();
        btn_actualizar = new javax.swing.JButton();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_titulo.setFont(new java.awt.Font("Gadugi", 1, 30)); // NOI18N
        jLabel_titulo.setForeground(new java.awt.Color(29, 33, 123));
        jLabel_titulo.setText("Información del usuario:");
        getContentPane().add(jLabel_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(29, 33, 123));
        jLabel2.setText("Apellidos:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(29, 33, 123));
        jLabel3.setText("Puesto:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jLabel4.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(29, 33, 123));
        jLabel4.setText("Email:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel5.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(29, 33, 123));
        jLabel5.setText("ID:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(486, 100, -1, -1));

        jLabel6.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(29, 33, 123));
        jLabel6.setText("Username:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 140, -1, -1));

        jLabel7.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(29, 33, 123));
        jLabel7.setText("Nombre:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jLabel9.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(29, 33, 123));
        jLabel9.setText("Teléfono:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel10.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(29, 33, 123));
        jLabel10.setText("Estatus:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 180, -1, -1));

        txt_id.setBackground(new java.awt.Color(240, 240, 240));
        txt_id.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        txt_id.setForeground(new java.awt.Color(29, 33, 123));
        txt_id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_id.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_id.setEnabled(false);
        getContentPane().add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 100, 60, -1));

        txt_username.setBackground(new java.awt.Color(240, 240, 240));
        txt_username.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        txt_username.setForeground(new java.awt.Color(29, 33, 123));
        txt_username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_username.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 140, 120, -1));

        txt_apellidos.setBackground(new java.awt.Color(240, 240, 240));
        txt_apellidos.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        txt_apellidos.setForeground(new java.awt.Color(29, 33, 123));
        txt_apellidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_apellidos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_apellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 200, -1));

        txt_email.setBackground(new java.awt.Color(240, 240, 240));
        txt_email.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        txt_email.setForeground(new java.awt.Color(29, 33, 123));
        txt_email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_email.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 200, -1));

        txt_telefono.setBackground(new java.awt.Color(240, 240, 240));
        txt_telefono.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        txt_telefono.setForeground(new java.awt.Color(29, 33, 123));
        txt_telefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_telefono.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 200, -1));

        txt_nombre.setBackground(new java.awt.Color(240, 240, 240));
        txt_nombre.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        txt_nombre.setForeground(new java.awt.Color(29, 33, 123));
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 200, -1));

        combo_estatus.setBackground(new java.awt.Color(240, 240, 240));
        combo_estatus.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        combo_estatus.setForeground(new java.awt.Color(29, 33, 123));
        combo_estatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        getContentPane().add(combo_estatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 180, -1, -1));

        combo_puesto.setBackground(new java.awt.Color(240, 240, 240));
        combo_puesto.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        combo_puesto.setForeground(new java.awt.Color(29, 33, 123));
        combo_puesto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Recepcion", "Reservas" }));
        getContentPane().add(combo_puesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, -1, -1));

        btn_modificarContraseña.setBackground(new java.awt.Color(255, 255, 255));
        btn_modificarContraseña.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        btn_modificarContraseña.setForeground(new java.awt.Color(29, 33, 123));
        btn_modificarContraseña.setText("Modificar contraseña");
        btn_modificarContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarContraseñaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_modificarContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, -1, -1));

        btn_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        btn_actualizar.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        btn_actualizar.setForeground(new java.awt.Color(29, 33, 123));
        btn_actualizar.setText("Actualizar");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, -1, -1));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed

        int validacion = 0;

        if (txt_nombre.getText().equals("")) {
            txt_nombre.setBackground(Color.pink);
            validacion++;
        }
        if (txt_apellidos.getText().equals("")) {
            txt_apellidos.setBackground(Color.pink);
            validacion++;
        }
        if (txt_telefono.getText().equals("")) {
            txt_telefono.setBackground(Color.pink);
            validacion++;
        }
        if (txt_email.getText().equals("")) {
            txt_email.setBackground(Color.pink);
            validacion++;
        }
        if (txt_username.getText().equals("")) {
            txt_username.setBackground(Color.pink);
            validacion++;
        }

        if (validacion > 0) {
            JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos.");
        } else {
            try {
                //Comprobación de que el nombre de username elegido no está ya siendo utilizado en la BD por otro user
                Connection cn1 = Conexion.conectar();
                PreparedStatement pst1 = cn1.prepareStatement("select username from usuarios where username=? and not id_usuario=?");
                pst1.setString(1, txt_username.getText());
                pst1.setString(2, txt_id.getText());
                ResultSet rs = pst1.executeQuery();

                if (rs.next()) {
                    txt_username.setBackground(Color.pink);
                    JOptionPane.showMessageDialog(null, "El username elegido no está disponible.", "Error", JOptionPane.ERROR_MESSAGE);
                    cn1.close();
                } else {
                    txt_username.setBackground(new Color(240, 240, 240));

                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pst2 = cn2.prepareStatement("update usuarios set nombre=?, apellidos=?, email=?, telefono=?, username=?, puesto=?,  estatus=? where id_usuario = '" + this.txt_id.getText() + "'");

                    pst2.setString(1, this.txt_nombre.getText().trim());
                    pst2.setString(2, this.txt_apellidos.getText().trim());
                    pst2.setString(3, this.txt_email.getText().trim());
                    pst2.setString(4, this.txt_telefono.getText().trim());
                    pst2.setString(5, this.txt_username.getText().trim());
                    if (this.combo_puesto.getSelectedIndex() == 0) {
                        pst2.setString(6, "Administrador");
                    } else if (this.combo_puesto.getSelectedIndex() == 1) {
                        pst2.setString(6, "Recepcion");
                    } else if (this.combo_puesto.getSelectedIndex() == 2) {
                        pst2.setString(6, "Reservas");
                    }

                    if (this.combo_estatus.getSelectedIndex() == 0) {
                        pst2.setString(7, "Activo");
                    } else if (this.combo_estatus.getSelectedIndex() == 1) {
                        pst2.setString(7, "Inactivo");
                    }

                    pst2.executeUpdate();
                    cn2.close();

                    txt_username.setBackground(new Color(188, 245, 144));
                    txt_nombre.setBackground(new Color(188, 245, 144));
                    txt_apellidos.setBackground(new Color(188, 245, 144));
                    txt_telefono.setBackground(new Color(188, 245, 144));
                    txt_email.setBackground(new Color(188, 245, 144));

                    JOptionPane.showMessageDialog(null, "Actualizado correctamente.");
                    this.dispose();
                }
                cn1.close();

            } catch (SQLException e) {
                System.err.println("Error al actualizar los datos del usuario. " + e);
                JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos. Contacte con el Administrador del sistema.");
            }

        }
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_modificarContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarContraseñaActionPerformed
        ModificarContraseña mc = new ModificarContraseña();
        mc.setVisible(true);
    }//GEN-LAST:event_btn_modificarContraseñaActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_modificarContraseña;
    private javax.swing.JComboBox<String> combo_estatus;
    private javax.swing.JComboBox<String> combo_puesto;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JLabel jLabel_titulo;
    private javax.swing.JTextField txt_apellidos;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
